includes:
    - ../../phpstan/phpstan-doctrine/extension.neon

services:
    -
        class: Oro\Rules\Methods\QueryBuilderInjectionRule
        arguments:
            checkThisOnly: %checkThisOnly%
            trustedData: %sql_injection_testing.trusted_data%
        tags:
            - phpstan.rules.rule

    -
        class: Oro\Rules\Types\RequestGetSessionTypeExtension
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    -
        class: Oro\Rules\Types\EntityManagerReturnTypeExtension
        arguments:
            supportedClass: Doctrine\ORM\EntityManagerInterface
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    -
        class: Oro\Rules\Types\EntityManagerReturnTypeExtension
        arguments:
            supportedClass: Doctrine\Persistence\ManagerRegistry
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    -
        class: Oro\Rules\Types\ManagerRegistryEMReturnTypeExtension
        arguments:
            supportedClass: Doctrine\Persistence\ManagerRegistry
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    -
        class: Oro\Rules\Types\ObjectRepositoryReturnTypeExtension
        arguments:
            supportedClass:  Doctrine\ORM\EntityRepository
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    managerRegistryGetRepository:
        class: Oro\Rules\Types\GetRepositoryDynamicReturnTypeExtension
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
        arguments:
            managerClass: Doctrine\Persistence\ManagerRegistry

    objectManagerGetRepository:
        class: Oro\Rules\Types\GetRepositoryDynamicReturnTypeExtension
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
        arguments:
            managerClass: Doctrine\Persistence\ObjectManager

    # Should be uncommented after existing problems fixed
    #-
        #class: Oro\Rules\ValidExceptionCatchRule
        #tags:
            #- phpstan.rules.rule

parametersSchema:
    sql_injection_testing: structure([
        trusted_data: structure([
            variables: array()
            properties: array()
            safe_static_methods: array()
            safe_methods: array()
            check_static_methods_safety: array()
            check_methods_safety: array()
            check_methods: array()
            clear_static_methods: array()
            clear_methods: array()
        ])
    ])

parameters:
    customRulesetUsed: true
    checkThisOnly: false
    inferPrivatePropertyTypeFromConstructor: true
    sql_injection_testing:
        trusted_data:
            variables: []
            properties: []
            safe_static_methods: []

            safe_methods:
                Doctrine\DBAL\Connection:
                    quote: true
                    quoteIdentifier: true

                Doctrine\DBAL\Driver\Connection:
                    quote: true

                Doctrine\ORM\Query\Expr\Join:
                    getJoin: true
                    getAlias: true
                    getConditionType: true
                    getIndexBy: true
                    getCondition: true

                Doctrine\ORM\QueryBuilder:
                    setParameter: true
                    setParameters: true
                    setMaxResults: true
                    setFirstResult: true
                    addCriteria: true
                    getAllAliases: true
                    getRootAliases: true
                    getRootAlias: true
                    getRootEntities: true
                    getMaxResults: true
                    getFirstResult: true
                    getParameter: true
                    getDQL: true
                    getQuery: true

                Doctrine\ORM\Query:
                    getDQL: true
                    getSQL: true

                Doctrine\DBAL\Query\QueryBuilder:
                    setParameter: true
                    setParameters: true
                    setMaxResults: true
                    setFirstResult: true
                    getAllAliases: true
                    getRootAliases: true
                    getRootAlias: true
                    getRootEntities: true
                    getMaxResults: true
                    getFirstResult: true
                    getParameter: true
                    getQuery: true

                Doctrine\ORM\Mapping\ClassMetadata:
                    getSingleIdentifierFieldName: true
                    getIdentifierFieldNames: true
                    getIdentifier: true
                    getTableName: true
                    getAssociationMapping: true

                Doctrine\ORM\Mapping\ClassMetadataInfo:
                    getSingleIdentifierFieldName: true
                    getIdentifierFieldNames: true
                    getIdentifier: true
                    getTableName: true
                    getAssociationMapping: true

                Doctrine\Persistence\Mapping\ClassMetadata:
                    getIdentifier: true
                    getIdentifierFieldNames: true
                    getIdentifierValues: true

                Doctrine\ORM\Query\Expr:
                    literal: true

                Doctrine\ORM\Query\Expr\Base:
                    add: true

                Doctrine\Common\Collections\ArrayCollection:
                    count: true

                DateTime:
                    format: true

                Doctrine\Common\Collections\Criteria:
                    getMaxResults: true
                    getFirstResult: true

                Symfony\Component\Validator\Context\ExecutionContextInterface:
                    getPropertyName: true
                    getClassName: true

            check_static_methods_safety: []

            check_methods_safety:
                Doctrine\Common\Inflector\Inflector:
                    pluralize: true
                    camelize: true

                Doctrine\Common\Collections\ExpressionBuilder:
                    notExists: [0]

            check_methods:
                Doctrine\ORM\QueryBuilder:
                    __all__: true
                    where: [0, 1]
                    orWhere: [0, 1]
                    andWhere: [0, 1]
                    having: [0, 1]
                    orHaving: [0, 1]
                    andHaving: [0, 1]
                    join: [0, 1, 3]
                    leftJoin: [0, 1, 3]
                    innerJoin: [0, 1, 3]

                Doctrine\DBAL\Query\QueryBuilder:
                    __all__: true
                    where: [0, 1]
                    orWhere: [0, 1]
                    andWhere: [0, 1]
                    having: [0, 1]
                    orHaving: [0, 1]
                    andHaving: [0, 1]
                    join: [0, 1, 3]
                    leftJoin: [0, 1, 3]
                    innerJoin: [0, 1, 3]

                Doctrine\ORM\Query\Expr:
                    __all__: true
                    in: [0]
                    notIn: [0]
                    eq: [0, 1]
                    neq: [0, 1]
                    gt: [0, 1]
                    lt: [0, 1]
                    gte: [0, 1]
                    lte: [0, 1]
                    like: [0, 1]
                    notLike: [0, 1]
                    between: [1, 2]
                    isMemberOf: [0, 1]

                Doctrine\ORM\Query\Expr\Andx:
                    add: true
                    addMultiple: true

                Doctrine\ORM\Query\Expr\Orx:
                    add: true
                    addMultiple: true

                Doctrine\ORM\Query\Expr\Select:
                    add: true
                    addMultiple: true

                Doctrine\ORM\Query\Expr\GroupBy:
                    add: true
                    addMultiple: true

                Doctrine\ORM\Query\Expr\Coalesce:
                    add: true
                    addMultiple: true

                Doctrine\DBAL\Query\Expression\ExpressionBuilder:
                    __all__: true

                Doctrine\DBAL\Connection:
                    fetchAssoc: [0]
                    fetchArray: [0]
                    fetchColumn: [0]
                    fetchAll: [0]
                    delete: [0, 1]
                    update: [0, 1, 2]
                    insert: [0, 1]
                    prepare: true
                    executeQuery: [0]
                    executeCacheQuery: [0]
                    project: [0]
                    query: [0, 1]
                    executeUpdate: [0]
                    exec: true

                Doctrine\ORM\EntityManager:
                    createQuery: true
                    createNativeQuery: true

            clear_static_methods: []

            clear_methods:
                Doctrine\ORM\Mapping\ClassMetadata:
                    getAssociationTargetClass: true
                    getAssociationMapping: true
                    getFieldMapping: true
                    getSingleAssociationJoinColumnName: true
                    getSingleAssociationReferencedJoinColumnName: true
                    getFieldForColumn: true

                Doctrine\Persistence\ManagerRegistry:
                    getManagerForClass: true

                Doctrine\Bundle\DoctrineBundle\Registry:
                    getManagerForClass: true

                Symfony\Bridge\Doctrine\RegistryInterface:
                    getManagerForClass: true
